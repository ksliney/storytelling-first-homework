{"version":3,"sources":["13-chart.js"],"names":["csv","then","ready","datapoints","log","xPositionScale","d3","scaleLinear","domain","range","names","map","d","name","yScale","scaleBand","selectAll","data","enter","append","attr","widthScale","hamburgers","colorScale","animal","i","xAxis","axisBottom","ticks","call","lower","text","yAxis","axisLeft","catch","err","width","svg","select","scaleOrdinal"],"mappings":";CACA,WACKA,GAAAA,IAAI,mBACJC,KAuBMC,SAAMC,GACLC,QAAAA,IAAI,UAAWD,GAEjBE,IAAAA,EAAiBC,GACpBC,cACAC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAG,MAETC,EAAQP,EAAWQ,IAAI,SAASC,GAC3BA,OAAAA,EAAEC,OAGPC,EAASR,GACVS,YACAP,OAAOE,GACPD,MAAM,CAAC,IAAK,IAGZO,EAAAA,UAAU,QACVC,KAAKd,GACLe,QACAC,OAAO,QACPC,KAAK,QAAS,SAASR,GACfS,OAAAA,EAAWT,EAAEU,cAErBF,KAAK,SAAU,IACfA,KAAK,OAAQ,SAASR,GACdW,OAAAA,EAAWX,EAAEY,UAErBJ,KAAK,IAAK,SAASR,EAAGa,GACdX,OAAAA,EAAOF,EAAEC,QAEjBO,KAAK,UAAW,IAEfM,IAAAA,EAAQpB,GAAGqB,WAAWtB,GAAgBuB,MAAM,IAG7CT,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,oBAClBS,KAAKH,GACLI,QAGAX,EAAAA,OAAO,QACPC,KAAK,IAAK,KACVA,KAAK,IAAK,KACVW,KAAK,uBAEJC,IAAAA,EAAQ1B,GAAG2B,SAASvB,GAAOkB,MAAM,GAGlCT,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdS,KAAKG,KA5EPE,MAAM,SAASC,GACN/B,QAAAA,IAAI,cAAe+B,KAG3BC,IAGAC,EAAM/B,GACPgC,OAAO,YACPnB,OAAO,OACPC,KAAK,SALK,KAMVA,KAAK,QAPI,KAQTD,OAAO,KACPC,KAAK,YAAa,qBAEfC,EAAaf,GAChBC,cACAC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAG,MAEPc,EAAajB,GAAGiC,eAAe9B,MAAM,CAAC,OAAQ,MAAO,UAvB7D","file":"13-chart.e5d88bb9.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n(function() {\n  d3.csv(\"eating-data.csv\")\n    .then(ready)\n    .catch(function(err) {\n      console.log(\"Failed with\", err);\n    });\n\n  var width = 600;\n  var height = 700;\n\n  var svg = d3\n    .select(\"#chart13\")\n    .append(\"svg\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(25, 25)\");\n\n  const widthScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, 500]);\n\n  const colorScale = d3.scaleOrdinal().range([\"blue\", \"red\", \"green\"]);\n\n  function ready(datapoints) {\n    console.log(\"Data is\", datapoints);\n\n    const xPositionScale = d3\n      .scaleLinear()\n      .domain([0, 15])\n      .range([0, 550]);\n\n    var names = datapoints.map(function(d) {\n      return d.name;\n    });\n\n    var yScale = d3\n      .scaleBand()\n      .domain(names)\n      .range([600, 0]);\n\n    svg\n      .selectAll(\"rect\")\n      .data(datapoints)\n      .enter()\n      .append(\"rect\")\n      .attr(\"width\", function(d) {\n        return widthScale(d.hamburgers);\n      })\n      .attr(\"height\", 50)\n      .attr(\"fill\", function(d) {\n        return colorScale(d.animal);\n      })\n      .attr(\"y\", function(d, i) {\n        return yScale(d.name);\n      })\n      .attr(\"opacity\", 0.5);\n\n    var xAxis = d3.axisBottom(xPositionScale).ticks(10);\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"axis x-axis\")\n      .attr(\"transform\", \"translate(0,\" + 600 + \")\")\n      .call(xAxis)\n      .lower();\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", 200)\n      .attr(\"y\", 650)\n      .text(\"hamburgers consumed\");\n\n    var yAxis = d3.axisLeft(names).ticks(7);\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"axis y-axis\")\n      .call(yAxis);\n  }\n})();\n"]}